import * as dotenv from 'dotenv';
dotenv.config();
import { NestFactory } from '@nestjs/core';
import { AppModule } from './app.module';
import { ValidationPipe } from '@nestjs/common';
import { ConfigService } from '@nestjs/config';
import { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';
import { NestExpressApplication } from '@nestjs/platform-express';
import { join } from 'path';
import cookieParser from 'cookie-parser';

async function bootstrap() {
  const app = await NestFactory.create<NestExpressApplication>(AppModule);
  const configService = app.get(ConfigService);
  
  // Middleware para parsear cookies (necesario para autenticaci√≥n con cookies seguras)
  app.use(cookieParser());
  
  // Configuraci√≥n global de validaci√≥n
  app.useGlobalPipes(new ValidationPipe({ 
    transform: true,
    whitelist: true,
    forbidNonWhitelisted: true,
  }));

  // Servir archivos est√°ticos (im√°genes)
  app.useStaticAssets(join(__dirname, '..', 'uploads'), {
    prefix: '/uploads/',
  });

  // Configuraci√≥n de CORS simplificada
  app.enableCors({
    origin: ['http://localhost:3000', 'https://nabra.mx'],
    credentials: true,
    methods: ['GET', 'HEAD', 'PUT', 'PATCH', 'POST', 'DELETE', 'OPTIONS'],
    allowedHeaders: ['Content-Type', 'Authorization', 'Accept', 'Origin', 'X-Requested-With'],
  });

  // Swagger / OpenAPI
  const swaggerConfig = new DocumentBuilder()
    .setTitle('Nabra API')
    .setDescription(`Documentaci√≥n de la API de Nabra para e-commerce.

**üìö Scroll hasta el final de esta p√°gina para ver los FLUJOS COMPLETOS DE TODAS LAS RUTAS**

---

# üìã FLUJOS COMPLETOS DE LAS RUTAS

## üîê FLUJO 1: Autenticaci√≥n de Usuario

**1.1 Registro de nuevo usuario**
- \`POST /auth/register\` ‚Üí Crear cuenta nueva (p√∫blica)
- \`POST /auth/login\` ‚Üí Iniciar sesi√≥n y obtener token JWT
- Guardar el token para usarlo en los siguientes requests

**1.2 Verificar sesi√≥n**
- \`GET /auth/check\` ‚Üí Verificar si el token es v√°lido

**1.3 Cerrar sesi√≥n**
- \`POST /auth/logout\` ‚Üí Cerrar sesi√≥n

---

## üõçÔ∏è FLUJO 2: Explorar Productos y Cat√°logo

**2.1 Ver cat√°logo general**
- \`GET /products\` ‚Üí Listar todos los productos (p√∫blica)
- \`GET /products?page=1&limit=20\` ‚Üí Con paginaci√≥n
- \`GET /products?category=zapatos\` ‚Üí Filtrar por categor√≠a

**2.2 Ver producto espec√≠fico**
- \`GET /products/:id\` ‚Üí Ver detalle de un producto (p√∫blica)
- \`GET /products/:id/promotions\` ‚Üí Ver producto con promociones aplicadas

**2.3 Buscar productos**
- \`GET /products/search?q=zapatos\` ‚Üí Buscar por texto (p√∫blica)

**2.4 Ver productos especiales**
- \`GET /products/featured\` ‚Üí Ver productos destacados (p√∫blica)
- \`GET /products/preorders\` ‚Üí Ver productos en preventa (p√∫blica)

**2.5 Ver categor√≠as**
- \`GET /products/categories\` ‚Üí Listar todas las categor√≠as (p√∫blica)
- \`GET /products/categories/:category/stats\` ‚Üí Estad√≠sticas de categor√≠a (p√∫blica)

---

## üõí FLUJO 3: Gesti√≥n del Carrito

**3.1 Ver mi carrito**
- \`GET /cart\` ‚Üí Ver carrito con promociones aplicadas autom√°ticamente
- \`GET /cart/summary\` ‚Üí Resumen con totales
- \`GET /cart/summary-with-discounts?couponCode=ABC\` ‚Üí Con cup√≥n opcional

**3.2 Agregar producto**
- \`POST /cart/add\` ‚Üí Agregar producto al carrito
  - Body: \`{ "productId": "...", "quantity": 1, "size": "M" }\`

**3.3 Actualizar carrito**
- \`PUT /cart/update/:itemId\` ‚Üí Actualizar cantidad o talla
  - Body: \`{ "quantity": 2 }\`
- \`DELETE /cart/remove/:itemId\` ‚Üí Eliminar un item
- \`DELETE /cart/clear\` ‚Üí Vaciar todo el carrito

**3.4 Validar carrito**
- \`GET /cart/validate\` ‚Üí Validar stock y disponibilidad antes de checkout

**3.5 Ver carrito con promociones**
- \`GET /cart/with-promotions\` ‚Üí Carrito con promociones en tiempo real
- \`GET /cart/with-promotions?couponCode=DESC10\` ‚Üí Aplicar cup√≥n

---

## üé´ FLUJO 4: Promociones y Cupones

**4.1 Ver promociones disponibles**
- \`GET /promotions/active\` ‚Üí Promociones activas (p√∫blica)
- \`GET /promotions/coupons/public\` ‚Üí Cupones p√∫blicos (p√∫blica)
- \`GET /promotions/my-coupons\` ‚Üí Mis cupones personales

**4.2 Validar y aplicar cup√≥n**
- \`POST /promotions/validate-coupon\` ‚Üí Validar cup√≥n antes de usarlo (p√∫blica)
  - Body: \`{ "couponCode": "BIENVENIDA10" }\`
- \`POST /cart/apply-coupon\` ‚Üí Aplicar cup√≥n al carrito
  - Body: \`{ "couponCode": "BIENVENIDA10" }\`

**4.3 Ver promociones por producto/categor√≠a**
- \`GET /promotions/product/:productId\` ‚Üí Promociones de un producto (p√∫blica)
- \`GET /promotions/category/:category\` ‚Üí Promociones de categor√≠a (p√∫blica)

---

## üì¶ FLUJO 5: Calcular Env√≠o (NO SE USA)

**5.1 Capturar direcci√≥n y calcular**
- \`POST /shipping/capture-and-calculate\` ‚Üí Capturar datos de env√≠o y calcular total
  - Body: \`{ "address": {...}, "contact": {...} }\`

**5.2 Calcular desde carrito**
- \`POST /shipping/calculate/cart\` ‚Üí Calcular env√≠o desde items del carrito
- \`POST /shipping/calculate/cart?addressId=123\` ‚Üí Con direcci√≥n guardada

**5.3 Consultar zonas**
- \`GET /shipping/zones/:postalCode\` ‚Üí Info de zona por c√≥digo postal

**5.4 Ver servicios de env√≠o**
- \`GET /shipping/services\` ‚Üí Servicios disponibles
- \`GET /shipping/coverage\` ‚Üí Informaci√≥n de cobertura

---

## üí≥ FLUJO 6: Pago con MercadoPago (COMPLETO)

**6.1 Crear checkout en MercadoPago**
- \`POST /payments/mercadopago/checkout\` ‚Üí Crear preferencia de pago
  - Body: \`{ "returnUrl": "...", "cancelUrl": "...", "simpleShipping": {...} }\`
  - Respuesta: \`{ "init_point": "https://mercadopago.com/..." }\`

**6.2 Usuario paga en MercadoPago**
- Redirigir al usuario a la URL \`init_point\`
- Usuario completa el pago en MercadoPago

**6.3 Callback autom√°tico (backend)**
- \`GET /payments/mercadopago/success\` ‚Üí MercadoPago redirige aqu√≠ (autom√°tico)
- Sistema crea la orden autom√°ticamente
- Sistema limpia el carrito
- Sistema env√≠a email de confirmaci√≥n
- Redirige al frontend con \`payment_id\` y \`status\`

**6.4 Confirmar pago (opcional)**
- \`GET /payments?limit=10\` ‚Üí Ver mis pagos

---

## üìã FLUJO 7: Ver y Gestionar √ìrdenes

**7.1 Ver mis √≥rdenes**
- \`GET /orders/my-orders\` ‚Üí Listar todas mis √≥rdenes
- \`GET /orders/my-orders?limit=10&offset=0\` ‚Üí Con paginaci√≥n
- \`GET /orders/my-orders/:id\` ‚Üí Ver detalle de una orden espec√≠fica

**7.2 Resumen de √≥rdenes**
- \`GET /orders/my-orders/summary\` ‚Üí KPIs y totales de mis √≥rdenes

---

## üöö FLUJO 8: Tracking de Env√≠o

**8.1 Consultar tracking**
- \`GET /orders/my-orders/:id\` ‚Üí Obtener orden (incluye tracking number)
- \`GET /shipping/track/order/:orderId\` ‚Üí Tracking por ID de orden
- \`GET /shipping/track/:trackingNumber\` ‚Üí Tracking p√∫blico por n√∫mero

**8.2 Ver historial de env√≠os**
- \`GET /shipping/my-shipments\` ‚Üí Todos mis env√≠os
- \`GET /shipping/my-shipments?limit=10&offset=0\` ‚Üí Con paginaci√≥n

---

## ‚≠ê FLUJO 9: Rese√±as de Productos

**9.1 Ver rese√±as de un producto**
- \`GET /reviews/product/:productId\` ‚Üí Ver rese√±as de un producto (p√∫blica)
- \`GET /reviews/product/:productId/stats\` ‚Üí Estad√≠sticas de rese√±as (p√∫blica)

**9.2 Crear mi rese√±a**
- \`GET /reviews/can-review/:productId\` ‚Üí Verificar si puedo rese√±ar
- \`POST /reviews\` ‚Üí Crear rese√±a
  - Body: \`{ "productId": "...", "rating": 5, "title": "...", "comment": "..." }\`

**9.3 Gestionar mis rese√±as**
- \`GET /reviews/my-reviews\` ‚Üí Ver todas mis rese√±as
- \`PUT /reviews/:reviewId\` ‚Üí Editar mi rese√±a
- \`DELETE /reviews/:reviewId\` ‚Üí Eliminar mi rese√±a

**9.4 Interactuar con rese√±as**
- \`POST /reviews/:reviewId/helpful\` ‚Üí Marcar rese√±a como √∫til
- \`POST /reviews/:reviewId/flag\` ‚Üí Reportar rese√±a inapropiada

---

## üë§ FLUJO 10: Perfil y Direcciones

**10.1 Ver y actualizar perfil**
- \`GET /profile\` ‚Üí Ver mi perfil completo
- \`PUT /profile\` ‚Üí Actualizar datos personales
  - Body: \`{ "firstName": "...", "lastName": "...", "phone": "..." }\`
- \`GET /profile/stats\` ‚Üí Estad√≠sticas de mi perfil

**10.2 Gesti√≥n de direcciones**
- \`GET /profile/addresses\` ‚Üí Listar todas mis direcciones
- \`POST /profile/addresses\` ‚Üí Agregar nueva direcci√≥n
  - Body: \`{ "street": "...", "city": "...", "postalCode": "...", "country": "..." }\`
- \`GET /profile/addresses/:addressId\` ‚Üí Ver una direcci√≥n espec√≠fica
- \`PUT /profile/addresses/:addressId\` ‚Üí Actualizar direcci√≥n
- \`DELETE /profile/addresses/:addressId\` ‚Üí Eliminar direcci√≥n
- \`POST /profile/addresses/:addressId/set-default\` ‚Üí Marcar como predeterminada

**10.3 Info para env√≠os**
- \`GET /profile/shipping-info\` ‚Üí Datos de perfil para env√≠os
- \`GET /profile/addresses/:addressId/drenvio-validation\` ‚Üí Validar direcci√≥n

**10.4 Verificaciones**
- \`POST /profile/verify/email\` ‚Üí Verificar email
- \`POST /profile/verify/phone\` ‚Üí Verificar tel√©fono

---

## üë• FLUJO 11: Usuarios (Admin)

**11.1 Gesti√≥n de usuarios**
- \`GET /users\` ‚Üí Listar todos los usuarios (admin)
- \`GET /users/:id\` ‚Üí Ver usuario por ID (admin)
- \`PUT /users/:id/role\` ‚Üí Actualizar rol de usuario (admin)
- \`DELETE /users/:id\` ‚Üí Eliminar usuario (admin)

---

## üîß FLUJO 12: Admin - Dashboard y Estad√≠sticas

**12.1 Dashboard principal**
- \`GET /admin/dashboard\` ‚Üí M√©tricas generales (usuarios, √≥rdenes, ingresos, etc.)
- \`GET /admin/stats/quick\` ‚Üí KPIs r√°pidos

**12.2 Gesti√≥n de productos (admin)**
- \`GET /admin/products\` ‚Üí Listar productos con filtros
- \`GET /admin/products/low-stock\` ‚Üí Productos con stock bajo
- \`PUT /admin/products/:productId/stock\` ‚Üí Actualizar stock
- \`PUT /admin/products/:productId/toggle-featured\` ‚Üí Alternar destacado

**12.3 Gesti√≥n de √≥rdenes (admin)**
- \`GET /admin/orders\` ‚Üí Listar √≥rdenes con filtros
- \`PUT /admin/orders/:orderId/status\` ‚Üí Actualizar estado de orden

**12.4 Gesti√≥n de rese√±as (admin)**
- \`GET /admin/reviews/pending\` ‚Üí Rese√±as pendientes de moderaci√≥n
- \`PUT /admin/reviews/:reviewId/moderate\` ‚Üí Moderar rese√±a

**12.5 Gesti√≥n de promociones (admin)**
- \`GET /admin/promotions\` ‚Üí Listar promociones
- \`POST /admin/promotions/create\` ‚Üí Crear promoci√≥n
- \`PUT /admin/promotions/:promotionId\` ‚Üí Actualizar promoci√≥n
- \`DELETE /admin/promotions/:promotionId\` ‚Üí Eliminar promoci√≥n
- \`GET /admin/coupons\` ‚Üí Listar cupones
- \`POST /admin/coupons/create\` ‚Üí Crear cup√≥n

---

## üîî FLUJO 13: Notificaciones

**13.1 Ver mis notificaciones**
- \`GET /notifications\` ‚Üí Listar mis notificaciones
- \`GET /notifications/stats\` ‚Üí Estad√≠sticas de notificaciones

**13.2 Gestionar notificaciones**
- \`PUT /notifications/:id/read\` ‚Üí Marcar como le√≠da
- \`PUT /notifications/read-all\` ‚Üí Marcar todas como le√≠das

**13.3 Preferencias**
- \`GET /notifications/preferences\` ‚Üí Ver mis preferencias
- \`PUT /notifications/preferences\` ‚Üí Actualizar preferencias

---

## üîê AUTENTICACI√ìN

**Uso del token JWT:**
1. Hacer login en \`POST /auth/login\`
2. Copiar el \`accessToken\` de la respuesta
3. Click en bot√≥n **"Authorize" üîí** arriba en Swagger
4. Ingresar: \`Bearer TU_TOKEN_AQUI\`
5. Click en "Authorize"

**Endpoints p√∫blicos (no requieren token):**
- \`POST /auth/register\`
- \`POST /auth/login\`
- \`GET /products\`
- \`GET /products/:id\`
- \`GET /products/search\`
- \`GET /products/featured\`
- \`GET /products/preorders\`
- \`GET /products/categories\`
- \`GET /promotions/active\`
- \`GET /promotions/coupons/public\`
- \`GET /reviews/product/:productId\`
- \`GET /shipping/track/:trackingNumber\`
- \`POST /promotions/validate-coupon\`
    `)
    .setVersion('1.0.0')
    .addBearerAuth(
      {
        type: 'http',
        scheme: 'bearer',
        bearerFormat: 'JWT',
        in: 'header',
        description: 'Introduce el token JWT con el prefijo Bearer',
      },
      'bearer',
    )
    .build();
  const document = SwaggerModule.createDocument(app, swaggerConfig);
  SwaggerModule.setup('docs', app, document, {
    swaggerOptions: {
      persistAuthorization: true,
      displayRequestDuration: true,
      tagsSorter: 'alpha',
      operationsSorter: 'alpha',
    },
    customSiteTitle: 'Nabra API Docs',
  });

  // Puerto desde variables de entorno
  const port = configService.get('PORT') || 3001;
  await app.listen(port);
}
bootstrap();
